# Set to true if you want to apply changes in real-time
# For example, when file is edited the plugin load the changes
# WARNING: This is a experimental system
File-Listener: false


# Rule identifier
# Rules have tags like material, lore, amount to compare with items
exampleRule1:
  # Rule types can be:
  # DEATH - Items who match be protected after death
  # DROP - Items who match will display a warning when player try to drop
  # DISABLED - Disable the rule
  type: DEATH, DROP
  # All before ":" are arguments separated by ":"
  # In this case the argument of material tag is "contains"
  # Argument matching type for strings:
  # contains -> Match when the item data CONTAINS the string on rule tag
  # equal -> Match when the item data IS EQUAL to string on rule tag
  # regex -> Match when the RegEx string contains item data of rule tag
  material:contains: 'SWORD'
  name:contains: 'Thunder'
  # Lists can have second argument
  # Second argument matching type for lists:
  # all -> Match when all the list matches with fist argument type
  # contains -> Math when at least one of elements on the list matches with first argument type
  lore:equal:all:
    - '&7This item can''t be'
    - '&7lose on death!'
  # Argument matching type for numbers:
  # more -> Match when item data number is MORE than rule tag
  # less -> Match when item data number is LESS than rule tag
  # between -> Match when item data number is BETWEEN of rule tag separated by "-" like "10-30"
  amount:less: '60'

exampleRule2:
  type: DEATH
  material: 'IRON_PICKAXE'
  name:regex: '&eCool Pick(axe)?'
  lore:contains:
    - 'Protected'
    - 'Second chance'

exampleRule3:
  type: DROP
  material: 'IRON_BLOCK'
  customModelData: 43
  nbt:
    someKey: 'internal data'
    otherKey: true
    somePath:
      someKey:contains: 'custom'
      otherKey: 53
    someList:
      0:
        someKey:contains: 'nodrop'
      2:
        somePath:
          someKey: 'internal data'
    otherList:contains:
      - 'protected'

exampleRule4:
  type: DEATH, DROP
  material: 'DIAMOND_SHOVEL'
  name: '&cThe Best Shovel'
  # If tou want the rule tag parse PlaceholderAPI placeholders just add the text configured in settings.yml at final
  # By default is "<allowPapi>"
  lore:contains:all<allowPapi>:
    - 'Item of %player_name%'
    - 'Protected item'
  # Enchantments tag is a bit complicated because is a list of comparators
  # The usage is "enchantments:<enchantment comparator>:<level comparator>:<list comparator>"
  # > Enchantment comparator uses a string matching type
  # > Level comparator uses a number matching type
  # > List comparator uses a list matching type
  enchantments:equal:exact:all:
    - 'FIRE_ASPECT=2'